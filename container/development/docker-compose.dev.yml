services:
  spring-boot-app:
    build:
      context: ../..
      dockerfile: container/development/Dockerfile
    ports:
      - "8080:8080"
    environment:
      SPRING_PROFILES_ACTIVE: docker
    depends_on:
      - oracle-db
    networks:
      - app-network
  
  oracle-db:
    image: gvenzl/oracle-free:23-slim
    container_name: oracle-xe
    ports:
      - "1521:1521"
    environment:
      ORACLE_DATABASE: votingsystem
      TARGET_PDB: votingsystem
      ORACLE_PASSWORD: votingsystem
      APP_USER: dev_db_user
      APP_USER_PASSWORD: dev_db_password
    volumes:
      - oracle-data:/opt/oracle/oradata
    networks:
      - app-network

  kafka:
    image: bitnami/kafka:3.9
    container_name: kafka
    ports:
      - "9092:9092"
      - "9094:9094"
    environment:
      - KAFKA_ENABLE_KRAFT=yes
      - KAFKA_CFG_PROCESS_ROLES=broker,controller
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093,EXTERNAL://:9094
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,EXTERNAL:PLAINTEXT
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092,EXTERNAL://localhost:9094
      - KAFKA_BROKER_ID=1
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=1@kafka:9093
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_NODE_ID=1
      - KAFKA_KRAFT_CLUSTER_ID=MkU3OEVBNTcwNTJENDM2Qk
    networks:
      - app-network
  
  redis:
    image: redis:7.2
    container_name: redis
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    command: [ "redis-server", "--save", "60", "1", "--loglevel", "warning", "--dbfilename", "redis-dump.rdb", "--databases", "1" ]
    networks:
      - app-network

volumes:
  oracle-data:
  kafka-data:
  redis-data:

networks:
  app-network: